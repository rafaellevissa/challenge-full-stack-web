{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Challenge",
    "description": "This is the documentation for the Challenge api",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "description": "HTTP"
    }
  ],
  "tags": [
    {
      "name": "student",
      "description": " Operations about student in the system."
    },
    {
      "name": "module",
      "description": " Operations about module in the system."
    },
    {
      "name": "registration",
      "description": " Operations about registration in the system."
    }
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/students": {
      "get": {
        "tags": [
          "student"
        ],
        "summary": "Listing of information registered in the student table",
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "description": "student Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List student",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        }
      }
    },
    "/student": {
      "post": {
        "tags": [
          "student"
        ],
        "summary": "Student record",
        "requestBody": {
          "description": "student Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/student"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful registration a new student",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "409": {
            "description": "Student already registered"
          }
        }
      }
    },
    "/student/:id": {
      "delete": {
        "tags": [
          "student"
        ],
        "summary": "Delete a student from database with given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the student we want to delete",
            "type": "number"
          }
        ],
        "response": {
          "200": {
            "description": "Student successfully deleted"
          },
          "404": {
            "description": "Student not found"
          }
        }
      }
    },
    "/modules": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Listing of information registered in the module table",
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "description": "module Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/modules"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List module",
            "schema": {
              "$ref": "#/definitions/modules"
            }
          }
        }
      }
    },
    "/module": {
      "post": {
        "tags": [
          "module"
        ],
        "summary": "Module record",
        "requestBody": {
          "description": "module Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/modules"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful registration a new module",
            "schema": {
              "$ref": "#/definitions/modules"
            }
          },
          "409": {
            "description": "Module already registered"
          }
        }
      }
    },
    "/module/:id": {
      "delete": {
        "tags": [
          "module"
        ],
        "summary": "Delete a module from database with given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the module we want to delete",
            "type": "number"
          }
        ],
        "response": {
          "200": {
            "description": "Module successfully deleted"
          },
          "404": {
            "description": "Module not found"
          }
        }
      }
    },
    "registration": {
      "get": {
        "tags": [
          "registration"
        ],
        "summary": "Listing of information registered in the module_student table",
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "description": "registration Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/registration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List registration",
            "schema": {
              "$ref": "#/definitions/registration"
            }
          },
          "404": {
            "description": "Registration not found"
          }
        }
      },
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Registration record",
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "description": "registration Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/registration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered"
          },
          "409": {
            "description": "Student already registered"
          },
          "404": {
            "description": "Module not found"
          }
        }
      }
    },
    "/registration/listModuleToStudent/:RA": {
      "get": {
        "tags": [
          "registration"
        ],
        "summary": "Search a student and all your modules",
        "parameters": [
          {
            "name": "RA",
            "in": "path",
            "required": true,
            "description": "RA of the student that we want search",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "List student registration",
            "schema": {
              "$ref": "#/definitions/registration_search_user"
            }
          },
          "404": {
            "description": "Student not found"
          },
          "406": {
            "description": "Modules not found"
          }
        }
      }
    },
    "/registration/listStudentsToModule/:module_name": {
      "get": {
        "tags": [
          "registration"
        ],
        "summary": "Search all students registered in the module",
        "parameters": [
          {
            "name": "module_name",
            "in": "path",
            "required": true,
            "description": "module_name of the module that we want search",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "List student registration",
            "schema": {
              "$ref": "#/definitions/registration_search_user"
            }
          },
          "404": {
            "description": "Module not found"
          },
          "406": {
            "description": "Students not found"
          }
        }
      }
    }
  },
  "definitions": {
    "student": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Rafael Levi"
        },
        "email": {
          "type": "string",
          "example": "rafaellevissa@gmail.com"
        },
        "RA": {
          "type": "number",
          "example": 339494
        },
        "cpf": {
          "type": "number",
          "example": 44552333345
        }
      }
    },
    "modules": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Desenvolvimentos de sistema 2"
        }
      }
    },
    "registration": {
      "type": "object",
      "properties": {
        "module_name": {
          "type": "string",
          "example": "Desenvolvimentos de sistema 2"
        },
        "student_RA": {
          "type": "string",
          "example": 2
        }
      }
    },
    "registration_search_user": {
      "type": "object",
      "properties": {
        "student": {
          "type": "object",
          "properties": {
            "studentName": {
              "type": "string",
              "example": "Rafael"
            },
            "module_info": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 4
                },
                "module_id": {
                  "type": "number",
                  "example": 4
                },
                "student_id": {
                  "type": "number",
                  "example": 4
                },
                "name": {
                  "type": "string",
                  "example": "modulo teste 1"
                }
              }
            }
          }
        }
      }
    },
    "registration_search_module": {
      "type": "object",
      "properties": {
        "student": {
          "type": "object",
          "properties": {
            "moduleName": {
              "type": "string",
              "example": "Desenvolvimento de sistemas 2"
            },
            "student_info": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 4
                },
                "module_id": {
                  "type": "number",
                  "example": 4
                },
                "student_id": {
                  "type": "number",
                  "example": 4
                },
                "name": {
                  "type": "string",
                  "example": "modulo teste 1"
                }
              }
            }
          }
        }
      }
    }
  }
}